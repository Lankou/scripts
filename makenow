#!/bin/bash
[ -z $1 ] && echo "Usage: $(basename $0) devices" && exit 1

timeconv()
{
  x=$1
  date -d "1970-01-01 UTC+8 +$x seconds" +"%Hh %Mm %Ss"
}

workdir=~/aokp
D=$(LC_ALL=C date +%Y-%m-%d)
backupdir=~/builds
remotedir=/var/www/aokp
remote=
remoteowner=www-data
logdir=~/make-logs
logfile=$D.log
buildlog=buildlog-$(date +%Y%m%d-%H%M%S).log
export USE_CCACHE=1
#export OUT_DIR_COMMON_BASE=/tmp

if [ -z $OUT_DIR_COMMON_BASE ]; then
  outdir=$workdir/out/target/product
else
  [ ! -d $OUT_DIR_COMMON_BASE ] && echo "Defined OUT_DIR_COMMON_BASE doesn't exist. Please check script." && exit 1
  outdir=$OUT_DIR_COMMON_BASE/aokp/target/product
  [ -d $OUT_DIR_COMMON_BASE/aokp ] && rm -rf $OUT_DIR_COMMON_BASE/aokp
fi

for dirs in $workdir $backupdir $logdir; do
  [ ! -d $dirs ] && echo "Defined directory $dirs doesn't exist. Please check script or create the directory." && exit 1
done

for vars in remotedir remote logfile buildlog; do
  [ -z \$vars ] && echo "Variable $vars is not defined. Script aborted." && exit 1
done

ssh -4 $remote "ls $remotedir &> /dev/null"
[ $? -ne 0 ] && echo "Cannot access $remotedir on $remote. Please check settings in script." && exit 1

for dir in $backupdir $logdir; do
  [ ! -d $dir ] && mkdir -p $dir
done

for targets in $@; do
  grep -E '^\ ' $workdir/vendor/aokp/products/AndroidProducts.mk | cut -d/ -f2 | cut -d. -f1 | grep $targets &> /dev/null
  if [ $? -ne 0 ]; then
    echo "Device '$targets' doesn't exist."
    exit 1
  fi
done

echo "Making AOKP for $# devices: $@" | tee -a $logdir/$buildlog
echo "Building from directory: $workdir" | tee -a $logdir/$buildlog
echo "Builds will be saved to: $backupdir" | tee -a $logdir/$buildlog
echo "Builds will be uploaded to: $remote:$remotedir" | tee -a $logdir/$buildlog
echo "Build log will be found at: $logdir, filename is $buildlog" | tee -a $logdir/$buildlog
echo "Time consumption for the process will be logged at: $logdir/$logfile" | tee -a $logdir/$buildlog
[ ! -z $OUT_DIR_COMMON_BASE ] && echo "Build output directory has been redirected to: $OUT_DIR_COMMON_BASE" | tee -a $logdir/$buildlog
sleep 5

cd $workdir
. $workdir/build/envsetup.sh

make clean

start=$(date +%s)

for target in $@; do
  singlestart=$(date +%s)
  build_date=$(LC_ALL=C date +%Y-%m-%d)
  brunch $target 2>&1 | tee -a $logdir/$buildlog
  if [ ${PIPESTATUS[0]} -ne 0 ]; then
    echo "Build error. Please check log." | tee -a $logdir/$buildlog
    echo "Time wasted: $(timeconv $(($(date +%s) - singlestart)))" | tee -a $logdir/$buildlog
    exit 1
  fi
  singlestop=$(date +%s)
  targetzip=aokp_$target\_jb-mr2_unofficial_$build_date.zip
  cp $outdir/$target/$targetzip ~/builds/
  echo "$target: $(timeconv $((singlestop - singlestart)))" | tee -a $logdir/$logfile
  rsync -4avzhhP --stats $backupdir/$targetzip $remote:$remotedir/ &
  upload_pids="$upload_pids $!"
done

for process in $upload_pids; do
  wait $process > /dev/null 2>&1
done

ssh -4 $remote "[ -f $remotedir/md5.txt ] && rm $remotedir/md5.txt; md5sum $remotedir/*.zip | sed s#$remotedir/#file:\ # > $remotedir/md5.txt; chown $remoteowner: $remotedir/*" > /dev/null 2>&1

stop=$(date +%s)
total=$((stop - start))

echo -e "Total time: $(timeconv $total)\n" | tee -a $logdir/$logfile
cat $logdir/$logfile
